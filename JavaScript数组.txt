概念
数组是按次序排列的一组
任何类型的数组都可以写入数组
若数组的元素还是数组就构成了多维数组

数组是一种特殊的对象(重要), 使用typeof可以返回"object", 其键名从0开始按次序排列的整数
数组对于键名为数值的属性使用方括号符取值

length属性
数组的length属性返回数组的成员数量, length可以通过点操作符和方括号符取值
length的值位动态值, 等于键名中最大的整数+1(重要), 这意味着length不一定准确
length属性可写的(重要). 当length值小于数组元素个数, 则数组成员也减少
length=0, 则清空数组
length值大于数组元素个数, 则产生空位(空位见下文)

数组添加其他非数值属性时不报错(因为数组也是对象), 但是不改变length值(应为length值由键名的整数最大值决定)
数组的间名超出了数值的表示范围, 则自动转为字符串

数组的检测及遍历
可以用in运算符检测数组是否包含某键名(数组也是对象)
in对空位返回false

for-in会遍历数组的所有属性(包括非数字键), 推荐使用for和while遍历数组
forEach也可遍历数组

数组的空位
两个逗号之间没有任何值时产生空位, 例如: [1, , 3]
空位不影响length(length值由键名的整数最大值决定)
取值时视空位为undefined
delete删除数组成员时形成空位, 但是也不影响length值
forEach, for-in, Object.keys()方法忽略空位, 虽然取值时将空位视为undefined(注意数组元素值为undefined时不会忽略)
空位表示这个数组没有这个元素, undefined表示数组有这个元素, 但是元素值为undefined

类数组对象
可以通过对象构造类似数组的对象(array-like object) 
var obj = {
	0:'a',
	1;'b',
	length: 2
}
obj是对象不是数组, 无法使用数组其他方法, length无法自动改变
arguments对象也是array-like object, 还有大多数DOM元素集
